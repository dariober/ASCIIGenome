import java.security.MessageDigest
import java.nio.file.Paths

apply plugin: 'java'
apply plugin: 'jacoco'

def jversion= JavaVersion.VERSION_11
java {
    sourceCompatibility= jversion
    targetCompatibility= jversion
}

if(JavaVersion.current() < jversion) {
    throw new GradleException("Java >= " + jversion + " is required but you are running " + JavaVersion.current())
}

/** Return the MD5 sum of the give File object */
ext.generateMD5 = { file ->
    def digest = MessageDigest.getInstance("MD5")
    file.eachByte( 4096 ) { buffer, length ->
        digest.update(buffer, 0 as byte, length)
    }
    new BigInteger(1, digest.digest()).toString(16).padLeft(32, '0')
}

/** Gunzip the given file. Same as `gunzip -c dir/myfile.txt.gz > dir/myfile.txt`. 
String filename must have extension .gz */
ext.gunzip = { filename ->
    File outfile = new File(filename.replaceFirst('\\.gz$', ''))
    outfile.withOutputStream { os ->
        os << resources.gzip(filename).read()
      }
}

String testDir = Paths.get(System.getProperty("user.dir"), 'test_data')

/* Prepare test data */
File targetFile= new File(testDir, 'chr7.fa')
String targetMD5= "30c3693ead968844a769a90a801a900f"

if (!targetFile.exists() || ext.generateMD5(targetFile) != targetMD5) {
    File fgz= new File(testDir, targetFile.name + ".gz")
    ext.gunzip(fgz.absolutePath)
    if(ext.generateMD5(targetFile) != targetMD5){
        throw new GradleException("Corrupted file " + targetFile)
    }
}

targetFile= new File(testDir, 'ALL.wex.union_illumina_wcmc_bcm_bc_bi.20110521.snps.exome.sites.vcf')
targetMD5= "6783ca5e6df2ce1075e1e0c924ad7d37"

if (!targetFile.exists() || ext.generateMD5(targetFile) != targetMD5) {
    File fgz= new File(testDir, targetFile.name + ".gz")
    ext.gunzip(fgz.absolutePath)
    if(ext.generateMD5(targetFile) != targetMD5){
        throw new GradleException("Corrupted file " + targetFile)
    }
}

ext.gunzip(Paths.get(testDir, "CEU.exon.2010_06.genotypes.vcf.gz").toString())
ext.gunzip(Paths.get(testDir, "ALL.wgs.mergedSV.v8.20130502.svs.genotypes.vcf.gz").toString())

// ---------------------------

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/" }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": "samTextViewer.Main"
    }
 
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    implementation group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.8.1'
    implementation group: 'jline', name: 'jline', version: '2.14.5'
    implementation 'com.github.dariober:Jawk:e5c8f26'
    implementation group: 'com.github.igvteam', name: 'igv', version: 'v2.6.3'
    // implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation group: 'com.github.dariober', name: 'htsjdk', version: '59c1d26cc'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'com.esotericsoftware.yamlbeans', name: 'yamlbeans', version: '1.13'
    implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
    implementation group: 'com.google.guava', name: 'guava', version: '24.0-android'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    implementation group: 'org.biojava', name: 'biojava-genome', version: '7.2.2'
    implementation group: 'org.biojava', name: 'biojava-core', version: '7.2.2'
    implementation group: 'openchart', name: 'openchart', version: '1.4.2'
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.21.0.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.1'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.17.1'
    implementation group: 'org.openjdk.nashorn', name: 'nashorn-core', version: '15.6'
    testImplementation 'junit:junit:4.12'
}

jacocoTestReport {jacocoTestReport
    reports {
        xml.required = true
        html.required = false
    }
}

check.dependsOn jacocoTestReport
